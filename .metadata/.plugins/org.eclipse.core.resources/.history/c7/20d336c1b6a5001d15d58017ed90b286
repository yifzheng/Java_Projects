import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.util.Random;
import javax.swing.JPanel;

public class GamePanel extends JPanel implements ActionListener{
	
	// variables necessary for the game
	
	// dimensions of the screen
	static final int SCREEN_WIDTH = 700;
	static final int SCREEN_HEIGHT = 600;
	
	// unit size
	static final int UNIT_SIZE = 25;
	static final int GAME_UNITS = (SCREEN_WIDTH * SCREEN_HEIGHT) / UNIT_SIZE;
	
	// delay
	static final int DELAY = 80;
	
	// coordinates of the snake
	// max size of snake is always less than the dimensions of the screen
	final int x[] = new int[GAME_UNITS]; // holds x-coordinate of the body parts of the snake including head of snake
	final int y[] = new int[GAME_UNITS]; // holds y-coordinate of the body parts of the snake including head of snake
	
	int bodyParts = 5;// initial body parts of the snake
	int applesEaten; // number of fruits eaten by the snake
	int appleX; // x-coordinate of where the apple is located
	int appleY; // y-coordinate of the apple
	char direction = 'R'; // initial direction the snake is moving; R = right; L = left; U = up; D = down
	boolean running = false; // boolean to keep check if game is running
	Timer timer;
	Random random; // instance of the random class
	
	// constructor for the class
	GamePanel(){
		random = new Random(); // initialize instance of random class
		this.setPreferredSize(new Dimension(SCREEN_WIDTH, SCREEN_HEIGHT)); // set the size of the panel with screen dimensions
		this.setBackground(Color.black);
		this.setFocusable(true); // focusable indicates whether this Component is focusable
		this.addKeyListener(new MyKeyAdapter()); // add a key listener with MyKeyAdapter class as parameter
		startGame(); // call startGame method to start the game once GamePanel() is called in main class
	}
	// method used to start the game
	public void startGame() {
		newApple(); // create new apple on the screen;
		running = true; // the game is now running
		timer = new Timer(DELAY, this); // set how fast the game is running
		timer.start(); // start  timer
	}
	
	public void paintComponent(Graphics g) {
		super.paintComponent(g);
	}
	// method to draw the graphics
	public void draw(Graphics g) {
		
	}
	// method to populate apple randomly on the map
	public void newApple() {
		
	}
	public void move() {
		 
	}
	public void checkApple() {
		
	}
	public void checkCollisions() {
		
	}
	public void gameOver(Graphics g) {
		
	}
	
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	
	// inner class called MyKeyAdapter to check key pressed by player
	public class MyKeyAdapter extends KeyAdapter {
		@Override
		public void keyPressed(KeyEvent e) {
			
		}
	}

}
